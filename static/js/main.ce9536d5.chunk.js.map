{"version":3,"sources":["lib/contracts.js","components/header.js","components/pageLoader.js","HotelList.js","HotelCreation.js","components/stars.js","ManageHotel.js","RoomBooking.js","MyHotels.js","Bookings.js","serviceWorker.js","index.js","App.js"],"names":["web3","address","contracts","instances","ethereum","window","isReady","Promise","res","rej","check","Factory","Hotel","setTimeout","enable","then","enArr","Web3","currentProvider","publicConfigStore","on","_ref","selectedAddress","console","log","providers","HttpProvider","process","eth","defaultAccount","TruffleContract","HotelFactory","setProvider","deployed","factoryInstance","contractsManager","name","stars","description","nameHex","utils","asciiToHex","this","execute","createContract","txReceipt","logs","args","contractAddress","price","cancellable","weiPrice","toWei","weiCancellable","at","hotelContract","addRoom","roomId","toString","getHotel","call","tx","id","hexToUtf8","hotelName","Number","hotelStars","hotelDescription","listAllHotels","from","listMyHotels","currentRoomId","lastRoom","roomsPromise","i","push","getRoom","all","rooms","map","txResult","index","_this","fromWei","priceCancellable","hotelAddress","isCancellableBooking","days","dateStart","dateEnd","fullPrice","toBN","mul","executeWithMoney","book","error","_context5","t0","start","end","isAvailableForDates","availableRoomsForDates","roomArray","available","filter","v","undefined","bookingId","cancel","_context8","listUserBookings","hotelIds","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee10","bookings","bookingObjects","wrap","_context10","prev","next","_this2","myBookings","sent","length","hotel","amountPaid","status","startDate","endDate","abrupt","stop","_x27","apply","arguments","bookingsArray","reduce","acc","arr","concat","withdrawalPromises","_this3","withdrawal","BN","total","dryRun","withdraw","wei","func","_len","param","Array","_key","req","value","_len2","_key2","withStyles","theme","spacer","flexGrow","classes","react_default","createElement","AppBar_default","position","Toolbar_default","Typography_default","variant","color","Link","to","className","Button_default","loader","width","height","left","top","marginTop","marginLeft","CircularProgress_default","size","HotelList","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","hotels","Contracts","listHotels","setState","Fragment","header","layout","pageLoader","Card_default","card","key","CardActionArea_default","CardMedia_default","media","image","CardContent_default","gutterBottom","component","CardActions_default","React","Component","appBar","defineProperty","spacing","unit","marginRight","breakpoints","up","marginBottom","HotelCreation","handleChange","event","target","hotelId","createHotel","align","Redirect","Paper_default","paper","TextField_default","label","onChange","fullWidth","autoComplete","required","multiline","rows","margin","FormControl_default","InputLabel_default","htmlFor","Select_default","starsSelect","MenuItem_default","buttonWrapper","onClick","saveHotel","padding","minWidth","display","justifyContent","button","right","_ref$rating","rating","fill","_","StarRate_default","ManageHotel","addingRoom","userHotels","hotelSummary","match","params","handleCloseAddRoomDialog","bind","assertThisInitialized","handleAddRoomDialogCreate","saveRoom","loadRooms","getRooms","_this$state$hotelSumm","Snackbar_default","errorSnack","open","includes","anchorOrigin","vertical","horizontal","SnackbarContent_default","errorSnackContent","message","Warning_default","style","verticalAlign","paragraph","components_stars","Fab_default","aria-label","addRoomFab","Add_default","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","room","scope","Dialog_default","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","autoFocus","type","e","InputProps","startAdornment","InputAdornment_default","DialogActions_default","backgroundColor","palette","dark","HotelSummary","handleDateChange","date","utc","startOf","moment","getAvailableRooms","availableRooms","unix","availableIds","_callee3","_this2$state","diff","_context3","_this$state2","material_ui_pickers_esm","MomentUtils","animateYearScrolling","minDate","Date","bookRoom","MyHotels","withdrawalAmount","withdrawalByHotel","getWithdrawalTotal","userHotelsIds","withdrawByHotel","_callee4","_context4","t1","_x3","withdrawalArray","_ref3","_ref4","slicedToArray","amount","getBookings","getMyBookingsFromHotels","booking","addressRow","format","Bookings_BookingAction","onUpdate","BookingAction","callback","whiteSpace","overflow","textOverflow","Boolean","location","hostname","ReactDOM","render","CssBaseline_default","HashRouter","Switch","Route","exact","path","RoomBooking","Bookings","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6u87BAOIA,EAQAC,yWAJAC,EAAY,GAEZC,EAAY,GAKVC,EAAWC,OAAOD,SAgCjB,SAASE,IAQd,OAAO,IAAIC,QAAQ,SAACC,EAAKC,IAPX,SAARC,EAAQF,GACRL,EAAUQ,SAAWT,EAAUU,MACjCJ,IAEAK,WAAW,kBAAMH,EAAMF,IAAM,KAI/BE,CAAMF,KAxCVJ,EAASU,SAASC,KAAK,SAAAC,GACG,qBAAbZ,GACTJ,EAAO,IAAIiB,IAAKb,GAChBH,EAAUe,EAAM,GAGhBhB,EAAKkB,gBAAgBC,kBAAkBC,GACrC,SACA,SAAAC,GAAyB,IAAtBC,EAAsBD,EAAtBC,gBACDrB,EAAUqB,MAIdC,QAAQC,IAAI,iDACZxB,EAAO,IAAIiB,IAAK,IAAIA,IAAKQ,UAAUC,aA5BlBC,kEA6BjB1B,EAAUD,EAAK4B,IAAIC,gBAIrB3B,EAAUS,QAAUmB,IAAgBC,GACpC7B,EAAUS,QAAQqB,YAAY5B,GAC9BF,EAAUS,QAAQsB,WAAWlB,KAAK,SAAAmB,GAChC/B,EAAUQ,QAAUuB,IAItBhC,EAAUU,MAAQkB,IAAgBlB,GAClCV,EAAUU,MAAMoB,YAAY5B,SA+Nf+B,EAFU,gJAzMLC,EAAMC,EAAOC,kFACvBC,EAAUvC,EAAKwC,MAAMC,WAAWL,YACdM,KAAKC,QAC3BxC,EAAUQ,QAAQiC,eAClBL,EACAF,EACAC,iBAJIO,2BAOCA,EAAUC,KAAK,GAAGC,KAAKC,gMAIlBC,EAAOC,EAAajD,sFAC1BkD,EAAWnD,EAAKwC,MAAMY,MAAMH,GAC5BI,EAAiBrD,EAAKwC,MAAMY,MAAMF,YACZhD,EAAUU,MAAM0C,GAAGrD,iBAAzCsD,kBACkBb,KAAKC,QAC3BY,EAAcC,QACdL,EACAE,iBAHIR,2BAKCA,EAAUC,KAAK,GAAGC,KAAKU,OAAOC,SAAS,qLAIjCzD,2FACeC,EAAUU,MAAM0C,GAAGrD,iBAAzCsD,kBACWA,EAAcI,SAASC,qBAAlCC,2BACC,CACLC,GAAI7D,EACJmC,KAAMpC,EAAKwC,MAAMuB,UAAUF,EAAGG,WAC9B3B,MAAO4B,OAAOJ,EAAGK,YACjB5B,YAAauB,EAAGM,2JAMlB,OAAOhE,EAAUQ,QAAQyD,cAAcR,KAAK,CAAES,KAAMpE,2CAKpD,OAAOE,EAAUQ,QAAQ2D,aAAaV,KAAK,CAAES,KAAMpE,6EAItCA,wGACeC,EAAUU,MAAM0C,GAAGrD,iBAAzCsD,kBACiBA,EAAcgB,uBAGrC,IAHMC,SAEAC,EAAe,GACZC,EAAI,EAAGA,GAAKF,EAAUE,IAC7BD,EAAaE,KAAKpB,EAAcqB,QAAQhB,KAAKc,qBAG3BnE,QAAQsE,IAAIJ,kBAA1BK,2BAECA,EAAMC,IAAI,SAACC,EAAUC,GAAX,MAAsB,CACrCnB,GAAImB,EAAQ,EACZhC,MAAOiC,EAAKC,QAAQH,EAAS/B,OAC7BmC,iBAAkBF,EAAKC,QAAQH,EAASI,+LAM1C3B,EACA4B,EACAC,EACAC,EACAtC,EACAuC,EACAC,2FAE4BvF,EAAUU,MAAM0C,GAAG+B,iBAAzC9B,SAEAmC,EAAY1F,EAAKwC,MAAMmD,KAAK3F,EAAKwC,MAAMY,MAAMH,IAAQ2C,IAAI5F,EAAKwC,MAAMmD,KAAKJ,+BAEtE7C,KAAKmD,iBACVtC,EAAcuC,KACdJ,EAAUhC,WACVD,EACA+B,EACAC,EACAH,0CAGF/D,QAAQwE,MAARC,EAAAC,mNAMoBZ,EAAc5B,EAAQyC,EAAOC,yFACvBjG,EAAUU,MAAM0C,GAAG+B,iBAAzC9B,kBACOA,EAAc6C,oBAAoBxC,KAAKH,EAAQyC,EAAOC,mOAIhDd,EAAca,EAAOC,2FACZjG,EAAUU,MAAM0C,GAAG+B,iBAAzC9B,kBACkBA,EAAc8C,uBAAuBzC,KAC3DsC,EACAC,iBAFIG,2BAICA,EACJvB,IAAI,SAACwB,EAAW7B,GACf,GAAI6B,EAAW,OAAO7B,EAAI,IAE3B8B,OAAO,SAAAC,GAAC,YAAUC,IAAND,mLAIJpB,EAAcsB,yFACGzG,EAAUU,MAAM0C,GAAG+B,iBAAzC9B,2BAESA,EAAcqD,OAAOD,EAAW,CAAEtC,KAAMpE,kFAErDsB,QAAQwE,MAARc,EAAAZ,kMAMaZ,yFACanF,EAAUU,MAAM0C,GAAG+B,iBAAzC9B,2BACCA,EAAcuD,iBAAiB,CAAEzC,KAAMpE,gMAIlB8G,gGACAxG,QAAQsE,IAClCkC,EAAShC,IAAT,eAAAiC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAa,SAAAC,EAAMxD,GAAN,IAAAyD,EAAAC,EAAA9C,EAAA,OAAAyC,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYC,EAAKC,WAAWhE,GAD5B,OAGX,IAFMyD,EADKG,EAAAK,KAELP,EAAiB,GACd9C,EAAI,EAAGA,EAAI6C,EAASzD,GAAGkE,OAAQtD,IACtC8C,EAAe7C,KAAK,CAClBb,GAAIyD,EAASzD,GAAGY,GAChBuD,MAAOnE,EACPL,OAAQ8D,EAAS9D,OAAOiB,GAAGhB,WAC3BwE,WAAYL,EAAK1C,QAAQoC,EAASW,WAAWxD,IAC7CyD,OAAQZ,EAASY,OAAOzD,GAAGhB,WAC3B0E,UAAWb,EAASa,UAAU1D,GAAGhB,WACjC2E,QAASd,EAASc,QAAQ3D,GAAGhB,aAXtB,OAAAgE,EAAAY,OAAA,SAcJd,GAdI,wBAAAE,EAAAa,SAAAjB,EAAA5E,SAAb,gBAAA8F,GAAA,OAAAxB,EAAAyB,MAAA/F,KAAAgG,YAAA,mBADIC,2BAmBCA,EAAcC,OAAO,SAACC,EAAKC,GAAN,OAAcD,EAAIE,OAAOD,IAAM,2LAIpC/B,yFACjBiC,EAAqBjC,EAAShC,IAAI,SAAAjB,GAAE,OAAImF,EAAKC,WAAWpF,cACzCvD,QAAQsE,IAAImE,sBAA4B,SAACH,EAAKM,GACjE,OAAON,EAAM5E,OAAOgF,EAAK9D,QAAQgE,KAD7BC,SAAgDR,YAEnD,qBAEIQ,iLAIQ/D,8FAAcgE,8CACDnJ,EAAUU,MAAM0C,GAAG+B,aAAzC9B,UAEF8F,2CACK9F,EAAc+F,SAAS1F,KAAqD,CACjFS,KAAMpE,qCAGDsD,EAAc+F,SAAyD,CAC5EjF,KAAMpE,wIAMJsJ,GACN,OAAOvJ,EAAKwC,MAAM2C,QAAQoE,EAAI7F,4CAIxB8F,GAAgB,QAAAC,EAAAf,UAAAV,OAAP0B,EAAO,IAAAC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAPF,EAAOE,EAAA,GAAAlB,UAAAkB,GACtB,OAAOJ,EAAIf,WAAJ,EAAQiB,EAARX,OAAA,CAAe,CAAE1E,KAAMpE,+CAIfuJ,EAAMvG,GAAiB,IACtC,IAAM4G,EAAM,CACVxF,KAAMpE,EACN6J,MAAO7G,GAH6B8G,EAAArB,UAAAV,OAAP0B,EAAO,IAAAC,MAAAI,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAPN,EAAOM,EAAA,GAAAtB,UAAAsB,GAMtC,OAAOR,EAAIf,WAAJ,EAAQiB,EAARX,OAAA,CAAec,oDCrOXI,OA1BA,SAAAC,GAAK,MAAK,CACvBC,OAAQ,CACNC,SAAU,KAwBCH,CApBA,SAAA5I,GAAA,IAAGgJ,EAAHhJ,EAAGgJ,QAAH,OACbC,EAAAlD,EAAAmD,cAACC,EAAApD,EAAD,CAAQqD,SAAS,UACfH,EAAAlD,EAAAmD,cAACG,GAAAtD,EAAD,KACEkD,EAAAlD,EAAAmD,cAACI,EAAAvD,EAAD,CAAYwD,QAAQ,KAAKC,MAAM,WAC7BP,EAAAlD,EAAAmD,cAACO,EAAA,EAAD,CAAMC,GAAG,KAAT,uBAEFT,EAAAlD,EAAAmD,cAAA,OAAKS,UAAWX,EAAQF,SACxBG,EAAAlD,EAAAmD,cAACU,EAAA7D,EAAD,CAAQyD,MAAM,WACZP,EAAAlD,EAAAmD,cAACO,EAAA,EAAD,CAAMC,GAAG,eAAT,6BAEFT,EAAAlD,EAAAmD,cAACU,EAAA7D,EAAD,CAAQyD,MAAM,WACZP,EAAAlD,EAAAmD,cAACO,EAAA,EAAD,CAAMC,GAAG,aAAT,2BAEFT,EAAAlD,EAAAmD,cAACU,EAAA7D,EAAD,CAAQyD,MAAM,WACZP,EAAAlD,EAAAmD,cAACO,EAAA,EAAD,CAAMC,GAAG,WAAT,uDCROd,OAhBA,SAAAC,GAAK,MAAK,CACvBgB,OAAQ,CACNC,MAAO,QACPC,OAAQ,QACRX,SAAU,WACVY,KAAM,MACNC,IAAK,MACLC,UAAW,QACXC,WAAY,WAQDvB,CAJI,SAAA5I,GAAA,IAAGgJ,EAAHhJ,EAAGgJ,QAAH,OACjBC,EAAAlD,EAAAmD,cAACkB,GAAArE,EAAD,CAAkBsE,KAAK,MAAMV,UAAWX,EAAQa,WCoB5CS,eACJ,SAAAA,EAAYC,GAAO,IAAA1G,EAAA,OAAA+B,OAAA4E,EAAA,EAAA5E,CAAAvE,KAAAiJ,IACjBzG,EAAA+B,OAAA6E,EAAA,EAAA7E,CAAAvE,KAAAuE,OAAA8E,EAAA,EAAA9E,CAAA0E,GAAA/H,KAAAlB,KAAMkJ,KAEDI,MAAQ,CACXC,OAAQ,IAJO/G,mNASX5E,2BAEkB4L,EAAUC,6DAAiB,iBAA7CpF,iBAEexG,QAAQsE,IAC3BkC,EAAShC,IAAI,SAAAjB,GACX,OAAOoI,EAAUvI,SAASG,cAFxBmI,SAMNvJ,KAAK0J,SAAS,CACZH,+IAIK,IACC5B,EAAY3H,KAAKkJ,MAAjBvB,QACR,OACEC,EAAAlD,EAAAmD,cAAAD,EAAAlD,EAAAiF,SAAA,KACE/B,EAAAlD,EAAAmD,cAAC+B,GAAD,MACAhC,EAAAlD,EAAAmD,cAAA,QAAMS,UAAWX,EAAQkC,SACrB7J,KAAKsJ,MAAMC,OAAOjE,QAAUsC,EAAAlD,EAAAmD,cAACiC,GAAD,MAC7B9J,KAAKsJ,MAAMC,OAAOlH,IAAI,SAACkD,EAAOhD,GAAR,OACrBqF,EAAAlD,EAAAmD,cAACkC,EAAArF,EAAD,CAAM4D,UAAWX,EAAQqC,KAAMC,IAAK1E,EAAMnE,IACxCwG,EAAAlD,EAAAmD,cAACqC,EAAAxF,EAAD,KACEkD,EAAAlD,EAAAmD,cAACsC,EAAAzF,EAAD,CACE4D,UAAWX,EAAQyC,MACnBC,MAAK,4CAAAhE,OAA8C,IACjD9D,EADG,aAGPqF,EAAAlD,EAAAmD,cAACyC,EAAA5F,EAAD,KACEkD,EAAAlD,EAAAmD,cAACI,EAAAvD,EAAD,CAAY6F,cAAY,EAACrC,QAAQ,KAAKsC,UAAU,MAC7CjF,EAAM7F,MAETkI,EAAAlD,EAAAmD,cAACI,EAAAvD,EAAD,CAAY8F,UAAU,KAAKjF,EAAM3F,eAGrCgI,EAAAlD,EAAAmD,cAAC4C,EAAA/F,EAAD,KACEkD,EAAAlD,EAAAmD,cAACO,EAAA,EAAD,CAAMC,GAAE,SAAAhC,OAAWd,EAAMnE,KACvBwG,EAAAlD,EAAAmD,cAACU,EAAA7D,EAAD,CAAQyD,MAAM,WAAd,6BAjDMuC,IAAMC,WA4DfpD,OAnFA,SAAAC,GAAK,MAAK,CACvBoD,OAAQ,CACN7C,SAAU,YAEZ8B,OAAOtF,OAAAsG,EAAA,EAAAtG,CAAA,CACLkE,MAAO,OACPK,WAAiC,EAArBtB,EAAMsD,QAAQC,KAC1BC,YAAkC,EAArBxD,EAAMsD,QAAQC,MAC1BvD,EAAMyD,YAAYC,GAAG,IAA2B,EAArB1D,EAAMsD,QAAQC,KAAW,GAAK,CACxDtC,MAAO,IACPK,WAAY,OACZkC,YAAa,SAGjBhB,KAAM,CACJnB,UAAgC,EAArBrB,EAAMsD,QAAQC,KACzBI,aAAmC,EAArB3D,EAAMsD,QAAQC,MAE9BX,MAAO,CACL1B,OAAQ,WAgEGnB,CAAmB0B,yIC7C5BmC,eAKJ,SAAAA,EAAYlC,GAAO,IAAA1G,EAAA,OAAA+B,OAAA4E,EAAA,EAAA5E,CAAAvE,KAAAoL,IACjB5I,EAAA+B,OAAA6E,EAAA,EAAA7E,CAAAvE,KAAAuE,OAAA8E,EAAA,EAAA9E,CAAA6G,GAAAlK,KAAAlB,KAAMkJ,KAURmC,aAAe,SAAApB,GAAG,OAAI,SAAAqB,GACpB9I,EAAKkH,SAALnF,OAAAsG,EAAA,EAAAtG,CAAA,GACG0F,EAAMqB,EAAMC,OAAOnE,UAXtB5E,EAAK8G,MAAQ,CACXhI,UAAW,GACXkK,QAAS,KACT/J,iBAAkB,GAClBD,WAAY,EACZ6B,MAAO,IAPQb,sMAkBmCxC,KAAKsJ,MAAjDhI,cAAWG,qBAAkBD,eAChCF,GAAcG,GAAqBD,yBACtCxB,KAAK0J,SAAS,CAAErG,MAAO,sEAGHmG,EAAUiC,YAC9BnK,EACAE,EACAC,UAHIlE,SAKNyC,KAAK0J,SAAS,CAAE8B,QAASjO,uIAGlB,IAAA4H,EAAAnF,KACC2H,EAAY3H,KAAKkJ,MAAjBvB,QACA6D,EAAYxL,KAAKsJ,MAAjBkC,QAEFnI,EACJuE,EAAAlD,EAAAmD,cAACI,EAAAvD,EAAD,CAAYyD,MAAM,QAAQuD,MAAM,UAC7B1L,KAAKsJ,MAAMjG,OAGhB,OACEuE,EAAAlD,EAAAmD,cAAAD,EAAAlD,EAAAiF,SAAA,KACG6B,EAAU5D,EAAAlD,EAAAmD,cAAC8D,GAAA,EAAD,CAAUtD,GAAE,UAAAhC,OAAYmF,KAAgB,GACnD5D,EAAAlD,EAAAmD,cAAC+B,GAAD,MACAhC,EAAAlD,EAAAmD,cAAA,QAAMS,UAAWX,EAAQkC,QACvBjC,EAAAlD,EAAAmD,cAAC+D,GAAAlH,EAAD,CAAO4D,UAAWX,EAAQkE,OACxBjE,EAAAlD,EAAAmD,cAACI,EAAAvD,EAAD,CAAY8F,UAAU,KAAKtC,QAAQ,KAAKwD,MAAM,UAA9C,gBAGCrI,EACDuE,EAAAlD,EAAAmD,cAACiE,GAAApH,EAAD,CACEqH,MAAM,aACN3E,MAAOpH,KAAKsJ,MAAMhI,UAClB0K,SAAUhM,KAAKqL,aAAa,aAC5BY,WAAS,EACTC,aAAa,QACbC,UAAQ,IAEVvE,EAAAlD,EAAAmD,cAACiE,GAAApH,EAAD,CACEqH,MAAM,oBACNK,WAAS,EACTC,KAAK,IACLjF,MAAOpH,KAAKsJ,MAAM7H,iBAClBuK,SAAUhM,KAAKqL,aAAa,oBAC5BiB,OAAO,SACPpE,QAAQ,WACR+D,WAAS,EACTE,UAAQ,IAGVvE,EAAAlD,EAAAmD,cAAC0E,GAAA7H,EAAD,KACEkD,EAAAlD,EAAAmD,cAAC2E,GAAA9H,EAAD,CAAY+H,QAAQ,SAApB,SACA7E,EAAAlD,EAAAmD,cAAC6E,GAAAhI,EAAD,CACEyH,UAAQ,EACR7D,UAAWX,EAAQgF,YACnBvF,MAAOpH,KAAKsJ,MAAM9H,WAClBwK,SAAUhM,KAAKqL,aAAa,eAE5BzD,EAAAlD,EAAAmD,cAAC+E,GAAAlI,EAAD,CAAU0C,MAAO,GAAjB,KACAQ,EAAAlD,EAAAmD,cAAC+E,GAAAlI,EAAD,CAAU0C,MAAO,GAAjB,KACAQ,EAAAlD,EAAAmD,cAAC+E,GAAAlI,EAAD,CAAU0C,MAAO,GAAjB,KACAQ,EAAAlD,EAAAmD,cAAC+E,GAAAlI,EAAD,CAAU0C,MAAO,GAAjB,KACAQ,EAAAlD,EAAAmD,cAAC+E,GAAAlI,EAAD,CAAU0C,MAAO,GAAjB,KACAQ,EAAAlD,EAAAmD,cAAC+E,GAAAlI,EAAD,CAAU0C,MAAO,GAAjB,OAGJQ,EAAAlD,EAAAmD,cAAA,OAAKS,UAAWX,EAAQkF,eACtBjF,EAAAlD,EAAAmD,cAACU,EAAA7D,EAAD,CACEoI,QAAS,kBAAM3H,EAAK4H,aACpB7E,QAAQ,YACRC,MAAM,UACNG,UAAU,UAJZ,qBA5FcqC,aA4GbpD,OAjJA,SAAAC,GAAK,MAAK,CACvBoD,OAAQ,CACN7C,SAAU,YAEZ8B,OAAOtF,OAAAsG,EAAA,EAAAtG,CAAA,CACLkE,MAAO,OACPK,WAAiC,EAArBtB,EAAMsD,QAAQC,KAC1BC,YAAkC,EAArBxD,EAAMsD,QAAQC,MAC1BvD,EAAMyD,YAAYC,GAAG,IAA2B,EAArB1D,EAAMsD,QAAQC,KAAW,GAAK,CACxDtC,MAAO,IACPK,WAAY,OACZkC,YAAa,SAGjBa,MAAMtH,OAAAsG,EAAA,EAAAtG,CAAA,CACJsE,UAAgC,EAArBrB,EAAMsD,QAAQC,KACzBI,aAAmC,EAArB3D,EAAMsD,QAAQC,KAC5BiC,QAA8B,EAArBxF,EAAMsD,QAAQC,MACtBvD,EAAMyD,YAAYC,GAAG,IAA2B,EAArB1D,EAAMsD,QAAQC,KAAW,GAAK,CACxDlC,UAAgC,EAArBrB,EAAMsD,QAAQC,KACzBI,aAAmC,EAArB3D,EAAMsD,QAAQC,KAC5BiC,QAA8B,EAArBxF,EAAMsD,QAAQC,OAG3B4B,YAAa,CACXM,SAAU,SAEZJ,cAAe,CACbK,QAAS,OACTC,eAAgB,YAElBC,OAAQ,CACNvE,UAAgC,EAArBrB,EAAMsD,QAAQC,KACzBjC,WAAYtB,EAAMsD,QAAQC,QAgHfxD,CAAmB6D,4WCzInB7D,OAnBA,SAAAC,GAAK,MAAK,CACvB7H,MAAO,CACLoI,SAAU,WACVa,IAA0B,EAArBpB,EAAMsD,QAAQC,KACnBsC,MAA4B,EAArB7F,EAAMsD,QAAQC,KACrB5C,MAAO,qBAcIZ,CAVF,SAAA5I,GAAA,IAAA2O,EAAA3O,EAAG4O,cAAH,IAAAD,EAAY,EAAZA,EAAe3F,EAAfhJ,EAAegJ,QAAf,OACXC,EAAAlD,EAAAmD,cAAA,OAAKS,UAAWX,EAAQhI,OACrBsH,MAAMsG,GACJC,KAAK,GACLnL,IAAI,SAACoL,EAAGzL,GAAJ,OACH4F,EAAAlD,EAAAmD,cAAC6F,GAAAhJ,EAAD,CAAUuF,IAAKjI,SCiDjB2L,eAKJ,SAAAA,EAAYzE,GAAO,IAAA1G,EAAA,OAAA+B,OAAA4E,EAAA,EAAA5E,CAAAvE,KAAA2N,IACjBnL,EAAA+B,OAAA6E,EAAA,EAAA7E,CAAAvE,KAAAuE,OAAA8E,EAAA,EAAA9E,CAAAoJ,GAAAzM,KAAAlB,KAAMkJ,KAiERmC,aAAe,SAAApB,GAAG,OAAI,SAAAqB,GACpB9I,EAAKkH,SAALnF,OAAAsG,EAAA,EAAAtG,CAAA,GACG0F,EAAMqB,EAAMC,OAAOnE,UAlEtB5E,EAAK8G,MAAQ,CACXsE,YAAY,EACZrN,MAAO,GACPmC,iBAAkB,GAClBmL,WAAY,GACZC,aAAc,CACZ1M,GAAI,KACJ1B,KAAM,GACNE,YAAa,GACbD,MAAO,GAETyC,MAAO,IAGTI,EAAKG,aAAeH,EAAK0G,MAAM6E,MAAMC,OAAOzQ,QAE5CiF,EAAKyL,yBAA2BzL,EAAKyL,yBAAyBC,KAA9B3J,OAAA4J,GAAA,EAAA5J,CAAA/B,IAChCA,EAAK4L,0BAA4B5L,EAAK4L,0BAA0BF,KAA/B3J,OAAA4J,GAAA,EAAA5J,CAAA/B,IACjCA,EAAK6L,SAAW7L,EAAK6L,SAASH,KAAd3J,OAAA4J,GAAA,EAAA5J,CAAA/B,IApBCA,wNAwBX5E,2BACqB4L,EAAUvI,SAASjB,KAAK2C,qBAA7CmL,SACN9N,KAAK0J,SAAS,CACZoE,iBAGF9N,KAAKsO,YAEL9E,EAAU5H,eAAevD,KAAK,SAAAgG,GAC5Bc,EAAKuE,SAAS,CACZmE,WAAYxJ,0QAMImF,EAAU+E,SAASvO,KAAK2C,qBAAtCP,SAENpC,KAAK0J,SAAS,CACZtH,+JAKFpC,KAAK0J,SAAS,CAAEkE,YAAY,qLAIsB5N,KAAKsJ,MAA/C/I,UAAOmC,qBAAkBoL,iBACjC9N,KAAKiO,oCACCjO,KAAKqO,SAASP,EAAa1M,GAAIb,EAAOmC,UAC5C1C,KAAK0J,SAAS,CACZnJ,MAAO,GACPmC,iBAAkB,gLAIP8I,EAASjL,EAAOmC,mFACvB8G,EAAU1I,QAAQP,EAAOmC,EAAkB8I,UACjDxL,KAAKsO,oJASE,IAAA/H,EAAAvG,KACC2H,EAAY3H,KAAKkJ,MAAjBvB,QADD6G,EAE8BxO,KAAKsJ,MAAMwE,aAAxCpO,EAFD8O,EAEC9O,KAAME,EAFP4O,EAEO5O,YAAaD,EAFpB6O,EAEoB7O,MACnByC,EAAUpC,KAAKsJ,MAAflH,MAER,OACEwF,EAAAlD,EAAAmD,cAAAD,EAAAlD,EAAAiF,SAAA,KACE/B,EAAAlD,EAAAmD,cAAC+B,GAAD,MACAhC,EAAAlD,EAAAmD,cAAA,QAAMS,UAAWX,EAAQkC,QACvBjC,EAAAlD,EAAAmD,cAAC4G,GAAA/J,EAAD,CACE4D,UAAWX,EAAQ+G,WACnBC,MAAO3O,KAAKsJ,MAAMuE,WAAWe,SAAS5O,KAAK2C,cAC3CkM,aAAc,CAAEC,SAAU,MAAOC,WAAY,WAE7CnH,EAAAlD,EAAAmD,cAACmH,GAAAtK,EAAD,CACE4D,UAAWX,EAAQsH,kBACnBC,QACEtH,EAAAlD,EAAAmD,cAAA,YACED,EAAAlD,EAAAmD,cAACsH,GAAAzK,EAAD,CAAa0K,MAAO,CAAEC,cAAe,YADvC,+DAQNzH,EAAAlD,EAAAmD,cAAC+D,GAAAlH,EAAD,CAAO4D,UAAWX,EAAQkE,OACxBjE,EAAAlD,EAAAmD,cAACI,EAAAvD,EAAD,CAAY8F,UAAU,KAAKtC,QAAQ,MAChCxI,GAEHkI,EAAAlD,EAAAmD,cAACI,EAAAvD,EAAD,CACEwD,QAAQ,YACRqC,cAAY,EACZ+E,WAAS,EACThH,UAAWX,EAAQ/H,aAElBA,GAEHgI,EAAAlD,EAAAmD,cAAC0H,GAAD,CAAOhC,OAAQ5N,KAEjBiI,EAAAlD,EAAAmD,cAAC+D,GAAAlH,EAAD,CAAO4D,UAAWX,EAAQkE,OACxBjE,EAAAlD,EAAAmD,cAACI,EAAAvD,EAAD,CAAY8F,UAAU,KAAKtC,QAAQ,MAAnC,SAGClI,KAAKsJ,MAAMuE,WAAWe,SAAS5O,KAAK2C,cACnCiF,EAAAlD,EAAAmD,cAAC2H,GAAA9K,EAAD,CACEyD,MAAM,YACNsH,aAAW,MACXnH,UAAWX,EAAQ+H,WACnB5C,QAAS,kBAAMvG,EAAKmD,SAAS,CAAEkE,YAAY,MAE3ChG,EAAAlD,EAAAmD,cAAC8H,GAAAjL,EAAD,OAGF,GAGFkD,EAAAlD,EAAAmD,cAAC+H,GAAAlL,EAAD,KACEkD,EAAAlD,EAAAmD,cAACgI,GAAAnL,EAAD,KACEkD,EAAAlD,EAAAmD,cAACiI,GAAApL,EAAD,KACEkD,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,aACAkD,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,CAAWgH,MAAM,SAAjB,kBACA9D,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,CAAWgH,MAAM,SAAjB,uBAGJ9D,EAAAlD,EAAAmD,cAACmI,GAAAtL,EAAD,KACGtC,EAAMC,IAAI,SAAA4N,GAAI,OACbrI,EAAAlD,EAAAmD,cAACiI,GAAApL,EAAD,CAAUuF,IAAKgG,EAAK7O,IAClBwG,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,CAAW8F,UAAU,KAAK0F,MAAM,OAC7BD,EAAK7O,IAERwG,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,CAAWgH,MAAM,SAASuE,EAAK1P,OAC/BqH,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,CAAWgH,MAAM,SAASuE,EAAKvN,yBAQ3CkF,EAAAlD,EAAAmD,cAACsI,GAAAzL,EAAD,CACEiK,KAAM3O,KAAKsJ,MAAMsE,WACjBwC,QAASpQ,KAAKiO,yBACdoC,kBAAgB,yBAEhBzI,EAAAlD,EAAAmD,cAACyI,GAAA5L,EAAD,CAAatD,GAAG,yBAAhB,YACAwG,EAAAlD,EAAAmD,cAAC0I,GAAA7L,EAAD,KACEkD,EAAAlD,EAAAmD,cAAC2I,GAAA9L,EAAD,2HAIAkD,EAAAlD,EAAAmD,cAACiE,GAAApH,EAAD,CACE+L,WAAS,EACTnE,OAAO,QACPP,MAAM,yBACN2E,KAAK,SACLzE,WAAS,EACT7E,MAAOpH,KAAKsJ,MAAM/I,MAClByL,SAAU,SAAA2E,GAAC,OAAIpK,EAAKmD,SAAS,CAAEnJ,MAAOoQ,EAAEpF,OAAOnE,SAC/CwJ,WAAY,CACVC,eACEjJ,EAAAlD,EAAAmD,cAACiJ,GAAApM,EAAD,CAAgBqD,SAAS,SAAzB,UAINH,EAAAlD,EAAAmD,cAACiE,GAAApH,EAAD,CACE4H,OAAO,QACPP,MAAM,4BACN2E,KAAK,SACLzE,WAAS,EACT7E,MAAOpH,KAAKsJ,MAAM5G,iBAClBsJ,SAAU,SAAA2E,GAAC,OACTpK,EAAKmD,SAAS,CAAEhH,iBAAkBiO,EAAEpF,OAAOnE,SAE7CwJ,WAAY,CACVC,eACEjJ,EAAAlD,EAAAmD,cAACiJ,GAAApM,EAAD,CAAgBqD,SAAS,SAAzB,WAKRH,EAAAlD,EAAAmD,cAACkJ,GAAArM,EAAD,KACEkD,EAAAlD,EAAAmD,cAACU,EAAA7D,EAAD,CAAQoI,QAAS9M,KAAKiO,yBAA0B9F,MAAM,WAAtD,UAGAP,EAAAlD,EAAAmD,cAACU,EAAA7D,EAAD,CAAQoI,QAAS9M,KAAKoO,0BAA2BjG,MAAM,WAAvD,oBAzMcwC,aAmNXpD,OA3PA,SAAAC,GAAK,MAAK,CACvBoD,OAAQ,CACN7C,SAAU,YAEZ8B,OAAOtF,OAAAsG,EAAA,EAAAtG,CAAA,CACLkE,MAAO,OACPK,WAAiC,EAArBtB,EAAMsD,QAAQC,KAC1BC,YAAkC,EAArBxD,EAAMsD,QAAQC,MAC1BvD,EAAMyD,YAAYC,GAAG,IAA2B,EAArB1D,EAAMsD,QAAQC,KAAW,GAAK,CACxDtC,MAAO,IACPK,WAAY,OACZkC,YAAa,SAGjBa,MAAMtH,OAAAsG,EAAA,EAAAtG,CAAA,CACJwD,SAAU,WACVc,UAAgC,EAArBrB,EAAMsD,QAAQC,KACzBI,aAAmC,EAArB3D,EAAMsD,QAAQC,KAC5BiC,QAA8B,EAArBxF,EAAMsD,QAAQC,MACtBvD,EAAMyD,YAAYC,GAAG,IAA2B,EAArB1D,EAAMsD,QAAQC,KAAW,GAAK,CACxDlC,UAAgC,EAArBrB,EAAMsD,QAAQC,KACzBI,aAAmC,EAArB3D,EAAMsD,QAAQC,KAC5BiC,QAA8B,EAArBxF,EAAMsD,QAAQC,OAG3B2E,WAAY,CACV3H,SAAU,WACVsF,MAA4B,EAArB7F,EAAMsD,QAAQC,KACrBnC,IAA0B,EAArBpB,EAAMsD,QAAQC,MAErB2D,WAAY,CACV3G,SAAU,SACVc,UAAgC,EAArBrB,EAAMsD,QAAQC,KACzBI,aAAmC,EAArB3D,EAAMsD,QAAQC,MAE9BkE,kBAAmB,CACjB+B,gBAAiBxJ,EAAMyJ,QAAQ5N,MAAM6N,QAuN1B3J,CAAmBoG,4CC5N5BwD,eAKJ,SAAAA,EAAYjI,GAAO,IAAA1G,EAAA,OAAA+B,OAAA4E,EAAA,EAAA5E,CAAAvE,KAAAmR,IACjB3O,EAAA+B,OAAA6E,EAAA,EAAA7E,CAAAvE,KAAAuE,OAAA8E,EAAA,EAAA9E,CAAA4M,GAAAjQ,KAAAlB,KAAMkJ,KAuCRmC,aAAe,SAAApB,GAAG,OAAI,SAAAqB,GACpB9I,EAAKkH,SAALnF,OAAAsG,EAAA,EAAAtG,CAAA,GACG0F,EAAMqB,EAAMC,OAAOnE,UA1CL5E,EA8CnB4O,iBAAmB,SAAAnH,GAAG,OAAI,SAAAoH,GACxB7O,EAAKkH,SAALnF,OAAAsG,EAAA,EAAAtG,CAAA,GAAiB0F,EAAMoH,EAAKC,MAAMC,QAAQ,WA7C1C/O,EAAK8G,MAAQ,CACXsE,YAAY,EACZrN,MAAO,GACPmC,iBAAkB,GAClBmL,WAAY,GACZnI,UAAW8L,OACRF,MACAC,QAAQ,OACX5L,QAAS6L,OACNF,MACAC,QAAQ,OACXzD,aAAc,CACZ1M,GAAI,KACJ1B,KAAM,GACNE,YAAa,GACbD,MAAO,GAETyC,MAAO,IAGTI,EAAKG,aAAeH,EAAK0G,MAAM6E,MAAMC,OAAOzQ,QAG5CiF,EAAKiP,kBAAoBjP,EAAKiP,kBAAkBvD,KAAvB3J,OAAA4J,GAAA,EAAA5J,CAAA/B,IAzBRA,iNA6BX5E,2BACqB4L,EAAUvI,SAASjB,KAAK2C,qBAA7CmL,SACN9N,KAAK0J,SAAS,CACZoE,sKAKF9N,KAAK0J,SAAS,CAAEkE,YAAY,iLAeG5N,KAAKsJ,MAA5B5D,cAAWC,qBACQ6D,EAAUkI,eACnC1R,KAAK2C,aACL+C,EAAUiM,OACVhM,EAAQgM,sBAHJC,kBAKcpI,EAAU+E,SAASvO,KAAK2C,qBAAtCP,SAEAsP,EAAiBtP,EAAM0B,OAAO,SAAAnF,GAAA,IAAGyC,EAAHzC,EAAGyC,GAAH,OAAYwQ,EAAahD,SAASxN,KAEtEpB,KAAK0J,SAAS,CACZtH,MAAOsP,uIAIF3Q,EAAQR,GAAqC,IAAA4E,EAAAnF,KAA9B4C,EAA8BoD,UAAAV,OAAA,QAAAtB,IAAAgC,UAAA,IAAAA,UAAA,GACpD,OAAAzB,OAAAC,EAAA,GAAAC,EAAAC,EAAAC,KAAO,SAAAkN,IAAA,IAAAC,EAAApM,EAAAC,EAAAoM,EAAAjU,EAAA,OAAA2G,EAAAC,EAAAK,KAAA,SAAAiN,GAAA,cAAAA,EAAA/M,KAAA+M,EAAA9M,MAAA,cAAA4M,EAC0B3M,EAAKmE,MAA5B5D,EADHoM,EACGpM,UAAWC,EADdmM,EACcnM,QACboM,EAAOpM,EAAQoM,KAAKrM,EAAW,SAAW,EAChD7G,QAAQC,IAAR,GAAAuH,OAAe0L,EAAf,YAHKC,EAAA9M,KAAA,EAKasE,EAAUpG,KAC1BrC,EACAoE,EAAKxC,aACLC,EACAmP,EACAxR,EACAmF,EAAUiM,OACVhM,EAAQgM,QAZL,cAKC7T,EALDkU,EAAA3M,KAcLxG,QAAQC,IAAIhB,GACZqH,EAAKsM,oBAfAO,EAAApM,OAAA,SAgBE9H,GAhBF,wBAAAkU,EAAAnM,SAAAgM,EAAA7R,0CAoBA,IAAAuG,EAAAvG,KACC2H,EAAY3H,KAAKkJ,MAAjBvB,QADDsK,EAE+BjS,KAAKsJ,MAAnC5D,EAFDuM,EAECvM,UAAWC,EAFZsM,EAEYtM,QAASvD,EAFrB6P,EAEqB7P,MAFrBoM,EAG8BxO,KAAKsJ,MAAMwE,aAAxCpO,EAHD8O,EAGC9O,KAAME,EAHP4O,EAGO5O,YAAaD,EAHpB6O,EAGoB7O,MAC3B,OACEiI,EAAAlD,EAAAmD,cAAAD,EAAAlD,EAAAiF,SAAA,KACE/B,EAAAlD,EAAAmD,cAAC+B,GAAD,MACAhC,EAAAlD,EAAAmD,cAAA,QAAMS,UAAWX,EAAQkC,QACvBjC,EAAAlD,EAAAmD,cAAC+D,GAAAlH,EAAD,CAAO4D,UAAWX,EAAQkE,OACxBjE,EAAAlD,EAAAmD,cAACI,EAAAvD,EAAD,CAAY8F,UAAU,KAAKtC,QAAQ,MAChCxI,GAEHkI,EAAAlD,EAAAmD,cAACI,EAAAvD,EAAD,CACEwD,QAAQ,YACRqC,cAAY,EACZ+E,WAAS,EACThH,UAAWX,EAAQ/H,aAElBA,GAEHgI,EAAAlD,EAAAmD,cAAC0H,GAAD,CAAOhC,OAAQ5N,KAEjBiI,EAAAlD,EAAAmD,cAAC+D,GAAAlH,EAAD,CACE4D,UAAWX,EAAQkE,MACnBuD,MAAO,CAAElC,QAAS,OAAQC,eAAgB,kBAE1CvF,EAAAlD,EAAAmD,cAACqK,GAAA,EAAD,CAAyBpS,MAAOqS,MAC9BvK,EAAAlD,EAAAmD,cAACqK,GAAA,EAAD,CACEnG,MAAM,UACN3E,MAAO1B,EACPsG,SAAUhM,KAAKoR,iBAAiB,aAChCgB,sBAAsB,EACtBC,QAAS,IAAIC,OAEf1K,EAAAlD,EAAAmD,cAACqK,GAAA,EAAD,CACEnG,MAAM,WACN3E,MAAOzB,EACPqG,SAAUhM,KAAKoR,iBAAiB,WAChCgB,sBAAsB,EACtBC,QAAS3M,KAGbkC,EAAAlD,EAAAmD,cAACU,EAAA7D,EAAD,CAAQwD,QAAQ,WAAW4E,QAAS9M,KAAKyR,mBAAzC,uBAIF7J,EAAAlD,EAAAmD,cAAC+D,GAAAlH,EAAD,CAAO4D,UAAWX,EAAQkE,OACxBjE,EAAAlD,EAAAmD,cAACI,EAAAvD,EAAD,CAAY8F,UAAU,KAAKtC,QAAQ,MAAnC,SAGAN,EAAAlD,EAAAmD,cAAC+H,GAAAlL,EAAD,KACEkD,EAAAlD,EAAAmD,cAACgI,GAAAnL,EAAD,KACEkD,EAAAlD,EAAAmD,cAACiI,GAAApL,EAAD,KACEkD,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,aACAkD,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,CAAWgH,MAAM,SAAjB,kBACA9D,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,CAAWgH,MAAM,SAAjB,qBACA9D,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,aACAkD,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,2BAGJkD,EAAAlD,EAAAmD,cAACmI,GAAAtL,EAAD,KACGtC,EAAMC,IAAI,SAAA4N,GAAI,OACbrI,EAAAlD,EAAAmD,cAACiI,GAAApL,EAAD,CAAUuF,IAAKgG,EAAK7O,IAClBwG,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,CAAW8F,UAAU,KAAK0F,MAAM,OAC7BD,EAAK7O,IAERwG,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,CAAWgH,MAAM,SAASuE,EAAK1P,OAC/BqH,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,CAAWgH,MAAM,SAASuE,EAAKvN,kBAC/BkF,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,KACEkD,EAAAlD,EAAAmD,cAACU,EAAA7D,EAAD,CACEwD,QAAQ,WACR4E,QAASvG,EAAKgM,SAAStC,EAAK7O,GAAI6O,EAAK1P,QAFvC,SAOFqH,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,KACEkD,EAAAlD,EAAAmD,cAACU,EAAA7D,EAAD,CACEwD,QAAQ,WACR4E,QAASvG,EAAKgM,SACZtC,EAAK7O,GACL6O,EAAKvN,kBACL,IALJ,oCA1KKiI,aAgMZpD,OAxOA,SAAAC,GAAK,MAAK,CACvBoD,OAAQ,CACN7C,SAAU,YAEZ8B,OAAOtF,OAAAsG,EAAA,EAAAtG,CAAA,CACLkE,MAAO,OACPK,WAAiC,EAArBtB,EAAMsD,QAAQC,KAC1BC,YAAkC,EAArBxD,EAAMsD,QAAQC,MAC1BvD,EAAMyD,YAAYC,GAAG,IAA2B,EAArB1D,EAAMsD,QAAQC,KAAW,GAAK,CACxDtC,MAAO,IACPK,WAAY,OACZkC,YAAa,SAGjBa,MAAMtH,OAAAsG,EAAA,EAAAtG,CAAA,CACJwD,SAAU,WACVc,UAAgC,EAArBrB,EAAMsD,QAAQC,KACzBI,aAAmC,EAArB3D,EAAMsD,QAAQC,KAC5BiC,QAA8B,EAArBxF,EAAMsD,QAAQC,MACtBvD,EAAMyD,YAAYC,GAAG,IAA2B,EAArB1D,EAAMsD,QAAQC,KAAW,GAAK,CACxDlC,UAAgC,EAArBrB,EAAMsD,QAAQC,KACzBI,aAAmC,EAArB3D,EAAMsD,QAAQC,KAC5BiC,QAA8B,EAArBxF,EAAMsD,QAAQC,OAG3B2E,WAAY,CACV3H,SAAU,WACVsF,MAA4B,EAArB7F,EAAMsD,QAAQC,KACrBnC,IAA0B,EAArBpB,EAAMsD,QAAQC,MAErB2D,WAAY,CACV3G,SAAU,SACVc,UAAgC,EAArBrB,EAAMsD,QAAQC,KACzBI,aAAmC,EAArB3D,EAAMsD,QAAQC,MAE9BkE,kBAAmB,CACjB+B,gBAAiBxJ,EAAMyJ,QAAQ5N,MAAM6N,QAoM1B3J,CAAmB4J,cCvN5BqB,eACJ,SAAAA,EAAYtJ,GAAO,IAAA1G,EAAA,OAAA+B,OAAA4E,EAAA,EAAA5E,CAAAvE,KAAAwS,IACjBhQ,EAAA+B,OAAA6E,EAAA,EAAA7E,CAAAvE,KAAAuE,OAAA8E,EAAA,EAAA9E,CAAAiO,GAAAtR,KAAAlB,KAAMkJ,KAEDI,MAAQ,CACXC,OAAQ,GACRkJ,iBAAkB,EAClBC,kBAAmB,IAGrBlQ,EAAKmQ,mBAAqBnQ,EAAKmQ,mBAAmBzE,KAAxB3J,OAAA4J,GAAA,EAAA5J,CAAA/B,IATTA,mNAaX5E,2BACuB4L,EAAU5H,+DAAmB,iBAApDgR,OAEN5S,KAAK2S,mBAAmBC,GACxB5S,KAAK6S,gBAAgBD,aAEA/U,QAAQsE,IAC3ByQ,EAAcvQ,IAAI,SAAAjB,GAChB,OAAOoI,EAAUvI,SAASG,cAFxBmI,SAMNvJ,KAAK0J,SAAS,CACZH,iMAIqBlF,yFACQmF,EAAUmJ,mBAAmBtO,UAAtDoO,SACN5T,QAAQC,IAAI2T,GACZzS,KAAK0J,SAAS,CACZ+I,yJAIKjH,GACP,OAAAjH,OAAAC,EAAA,GAAAC,EAAAC,EAAAC,KAAO,SAAAkN,IAAA,OAAApN,EAAAC,EAAAK,KAAA,SAAAiN,GAAA,cAAAA,EAAA/M,KAAA+M,EAAA9M,MAAA,cAAA8M,EAAA9M,KAAA,EACCsE,EAAUhD,WAAWgF,GAAS,GAD/B,wBAAAwG,EAAAnM,SAAAgM,EAAA7R,yFAKawL,2FAEX3N,QAAQsE,IACbqJ,EAAQnJ,IAAR,eAAAiC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAY,SAAAmO,EAAM1R,GAAN,OAAAqD,EAAAC,EAAAK,KAAA,SAAAgO,GAAA,cAAAA,EAAA9N,KAAA8N,EAAA7N,MAAA,cAAA6N,EAAAxP,GACFnC,EADE2R,EAAA7N,KAAA,EACQsE,EAAUhD,WAAWpF,GAD7B,cAAA2R,EAAAC,GAAAD,EAAA1N,KAAA0N,EAAAnN,OAAA,UAAAmN,EAAAxP,GAAAwP,EAAAC,KAAA,wBAAAD,EAAAlN,SAAAiN,EAAA9S,SAAZ,gBAAAiT,GAAA,OAAA3O,EAAAyB,MAAA/F,KAAAgG,YAAA,qDAGI,UALFkN,OAOAR,EAAoBQ,EAAgBhN,OAAO,SAACC,EAADgN,GAAuB,IAAAC,EAAA7O,OAAA8O,GAAA,EAAA9O,CAAA4O,EAAA,GAAhB/R,EAAgBgS,EAAA,GAAZE,EAAYF,EAAA,GAEtE,OADAjN,EAAI/E,GAAMoI,EAAU/G,QAAQ6Q,GAAU,MAC/BnN,GACN,IACHtH,QAAQC,IAAI4T,GACZ1S,KAAK0J,SAAS,CACZgJ,0JAIK,IAAAvN,EAAAnF,KACC2H,EAAY3H,KAAKkJ,MAAjBvB,QACA8K,EAAqBzS,KAAKsJ,MAA1BmJ,iBACR,OACE7K,EAAAlD,EAAAmD,cAAAD,EAAAlD,EAAAiF,SAAA,KACE/B,EAAAlD,EAAAmD,cAAC+B,GAAD,MACAhC,EAAAlD,EAAAmD,cAAA,QAAMS,UAAWX,EAAQkC,QACvBjC,EAAAlD,EAAAmD,cAACkC,EAAArF,EAAD,CAAM4D,UAAWX,EAAQqC,MACvBpC,EAAAlD,EAAAmD,cAACyC,EAAA5F,EAAD,KACEkD,EAAAlD,EAAAmD,cAACI,EAAAvD,EAAD,CAAY6F,cAAY,EAACrC,QAAQ,KAAKsC,UAAU,MAAhD,2BAC2BiI,EAD3B,WAKFzS,KAAKsJ,MAAMC,OAAOjE,QAAUsC,EAAAlD,EAAAmD,cAACiC,GAAD,MAC7B9J,KAAKsJ,MAAMC,OAAOlH,IAAI,SAAAkD,GAAK,OAC1BqC,EAAAlD,EAAAmD,cAACkC,EAAArF,EAAD,CAAM4D,UAAWX,EAAQqC,KAAMC,IAAK1E,EAAMnE,IACxCwG,EAAAlD,EAAAmD,cAACqC,EAAAxF,EAAD,KACEkD,EAAAlD,EAAAmD,cAACO,EAAA,EAAD,CAAMC,GAAE,WAAAhC,OAAad,EAAMnE,KACzBwG,EAAAlD,EAAAmD,cAACyC,EAAA5F,EAAD,KACEkD,EAAAlD,EAAAmD,cAACI,EAAAvD,EAAD,CAAY6F,cAAY,EAACrC,QAAQ,KAAKsC,UAAU,MAC7CjF,EAAM7F,SAKdyF,EAAKmE,MAAMoJ,kBAAkBnN,EAAMnE,KAClCwG,EAAAlD,EAAAmD,cAACU,EAAA7D,EAAD,CAAQoI,QAAS3H,EAAKyB,SAASrB,EAAMnE,KAArC,YACY+D,EAAKmE,MAAMoJ,kBAAkBnN,EAAMnE,iBA3FxCsJ,IAAMC,WAsGdpD,OA7HA,SAAAC,GAAK,MAAK,CACvBoD,OAAQ,CACN7C,SAAU,YAEZ8B,OAAOtF,OAAAsG,EAAA,EAAAtG,CAAA,CACLkE,MAAO,OACPK,WAAiC,EAArBtB,EAAMsD,QAAQC,KAC1BC,YAAkC,EAArBxD,EAAMsD,QAAQC,MAC1BvD,EAAMyD,YAAYC,GAAG,IAA2B,EAArB1D,EAAMsD,QAAQC,KAAW,GAAK,CACxDtC,MAAO,IACPK,WAAY,OACZkC,YAAa,SAGjBhB,KAAM,CACJnB,UAAgC,EAArBrB,EAAMsD,QAAQC,KACzBI,aAAmC,EAArB3D,EAAMsD,QAAQC,MAE9BX,MAAO,CACL1B,OAAQ,WA0GGnB,CAAmBiL,ICrF5BA,eACJ,SAAAA,EAAYtJ,GAAO,IAAA1G,EAAA,OAAA+B,OAAA4E,EAAA,EAAA5E,CAAAvE,KAAAwS,IACjBhQ,EAAA+B,OAAA6E,EAAA,EAAA7E,CAAAvE,KAAAuE,OAAA8E,EAAA,EAAA9E,CAAAiO,GAAAtR,KAAAlB,KAAMkJ,KAEDI,MAAQ,CACXjF,SAAU,GACVQ,SAAU,IAGZrC,EAAK+Q,YAAc/Q,EAAK+Q,YAAYrF,KAAjB3J,OAAA4J,GAAA,EAAA5J,CAAA/B,IARFA,iNAYX5E,2BACkB4L,EAAUC,6DAAiB,UAA7CpF,OAENrE,KAAK0J,SAAS,CACZrF,aAGFrE,KAAKuT,8QAIClP,EAAWrE,KAAKsJ,MAAMjF,kBACLmF,EAAUgK,wBAAwBnP,UAAnDQ,SACNhG,QAAQC,IAAI+F,GACZ7E,KAAK0J,SAAS,CACZ7E,gJAYK,IAAAM,EAAAnF,KACC2H,EAAY3H,KAAKkJ,MAAjBvB,QACA9C,EAAa7E,KAAKsJ,MAAlBzE,SAER,OACE+C,EAAAlD,EAAAmD,cAAAD,EAAAlD,EAAAiF,SAAA,KACE/B,EAAAlD,EAAAmD,cAAC+B,GAAD,MACAhC,EAAAlD,EAAAmD,cAAA,QAAMS,UAAWX,EAAQkC,QACvBjC,EAAAlD,EAAAmD,cAAC+D,GAAAlH,EAAD,CAAO4D,UAAWX,EAAQkE,OACxBjE,EAAAlD,EAAAmD,cAACI,EAAAvD,EAAD,CAAY8F,UAAU,KAAKtC,QAAQ,MAAnC,eAGAN,EAAAlD,EAAAmD,cAAC+H,GAAAlL,EAAD,KACEkD,EAAAlD,EAAAmD,cAACgI,GAAAnL,EAAD,KACEkD,EAAAlD,EAAAmD,cAACiI,GAAApL,EAAD,KACEkD,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,cACAkD,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,CAAWgH,MAAM,SAAjB,WACA9D,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,CAAWgH,MAAM,SAAjB,YACA9D,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,CAAWgH,MAAM,SAAjB,SACA9D,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,CAAWgH,MAAM,SAAjB,YAGJ9D,EAAAlD,EAAAmD,cAACmI,GAAAtL,EAAD,KACGG,EAASxC,IAAI,SAAAoR,GAAO,OACnB7L,EAAAlD,EAAAmD,cAACiI,GAAApL,EAAD,CAAUuF,IAAKwJ,EAAQrS,IACrBwG,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,CAAW8F,UAAU,KAAK0F,MAAM,OAC9BtI,EAAAlD,EAAAmD,cAAA,OAAKS,UAAWX,EAAQ+L,YAAaD,EAAQlO,QAE/CqC,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,KACG8M,KAAOG,KAAK8B,EAAQ/N,WAAWiO,OAAO,aAEzC/L,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,KACG8M,KAAOG,KAAK8B,EAAQ9N,SAASgO,OAAO,aAEvC/L,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,CAAWgH,MAAM,SAAS+H,EAAQjO,YAClCoC,EAAAlD,EAAAmD,cAACkI,GAAArL,EAAD,CAAWgH,MAAM,SACf9D,EAAAlD,EAAAmD,cAAC+L,GAAD,CACEH,QAASA,EACTI,SAAU1O,EAAKoO,8BA9EhB7I,IAAMC,WA4FvBmJ,GAAgB,SAAAnV,GAA2B,IApG1B6M,EAASvH,EAAW8P,EAoGlBN,EAAwB9U,EAAxB8U,QAASI,EAAelV,EAAfkV,SAChC,OAAQJ,EAAQhO,QACd,IAAK,IACH,MAAO,YACT,IAAK,IACL,IAAK,IACH,MAAO,YACT,IAAK,IACH,OAAIgO,EAAQ/N,WAAa8L,OAASG,OACzB,YAIP/J,EAAAlD,EAAAmD,cAACU,EAAA7D,EAAD,CACEwD,QAAQ,WACR4E,SAnHatB,EAmHUiI,EAAQlO,MAnHTtB,EAmHgBwP,EAAQrS,GAnHb2S,EAmHiBF,EAlHnD,WACL,IAAM3P,EAASsF,EAAUtF,OAAOsH,EAASvH,GAEzC,OADA8P,EAAS7P,GACFA,KA6GH,UAQJ,QACE,MAAO,SAIEqD,OA5JA,SAAAC,GAAK,MAAK,CACvBqC,OAAOtF,OAAAsG,EAAA,EAAAtG,CAAA,CACLkE,MAAO,OACPK,WAAiC,EAArBtB,EAAMsD,QAAQC,KAC1BC,YAAkC,EAArBxD,EAAMsD,QAAQC,MAC1BvD,EAAMyD,YAAYC,GAAG,IAA2B,EAArB1D,EAAMsD,QAAQC,KAAW,GAAK,CACxDtC,MAAO,IACPK,WAAY,OACZkC,YAAa,SAGjBa,MAAMtH,OAAAsG,EAAA,EAAAtG,CAAA,CACJwD,SAAU,WACVc,UAAgC,EAArBrB,EAAMsD,QAAQC,KACzBI,aAAmC,EAArB3D,EAAMsD,QAAQC,KAC5BiC,QAA8B,EAArBxF,EAAMsD,QAAQC,MACtBvD,EAAMyD,YAAYC,GAAG,IAA2B,EAArB1D,EAAMsD,QAAQC,KAAW,GAAK,CACxDlC,UAAgC,EAArBrB,EAAMsD,QAAQC,KACzBI,aAAmC,EAArB3D,EAAMsD,QAAQC,KAC5BiC,QAA8B,EAArBxF,EAAMsD,QAAQC,OAG3B2I,WAAY,CACVjL,MAAO,QACPuL,WAAY,SACZC,SAAU,SACVC,aAAc,cAkIH3M,CAAmBiL,IC9Jd2B,QACW,cAA7BxW,OAAOyW,SAASC,UAEe,UAA7B1W,OAAOyW,SAASC,UAEhB1W,OAAOyW,SAASC,SAAStG,MACvB,2DCZNuG,IAASC,OAAO3M,EAAAlD,EAAAmD,cCID,WACb,OACED,EAAAlD,EAAAmD,cAAAD,EAAAlD,EAAAiF,SAAA,KACE/B,EAAAlD,EAAAmD,cAAC2M,EAAA9P,EAAD,MACAkD,EAAAlD,EAAAmD,cAAC4M,EAAA,EAAD,KACE7M,EAAAlD,EAAAmD,cAAC6M,EAAA,EAAD,KACE9M,EAAAlD,EAAAmD,cAAC8M,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBrK,UAAWsK,KAC9ClN,EAAAlD,EAAAmD,cAAC8M,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYrK,UAAWgI,KACzC5K,EAAAlD,EAAAmD,cAAC8M,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAcrK,UAAWuK,KAC3CnN,EAAAlD,EAAAmD,cAAC8M,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUrK,UAAWY,KACvCxD,EAAAlD,EAAAmD,cAAC8M,EAAA,EAAD,CAAOE,KAAK,mBAAmBrK,UAAWmD,KAC1C/F,EAAAlD,EAAAmD,cAAC8M,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIrK,UAAWvB,SDf3B,MAAS+L,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/W,KAAK,SAAAgX,GACjCA,EAAaC","file":"static/js/main.ce9536d5.chunk.js","sourcesContent":["import Web3 from \"web3\";\nimport TruffleContract from \"truffle-contract\";\nimport Hotel from \"../contracts/Hotel.json\";\nimport HotelFactory from \"../contracts/HotelFactory.json\";\n\nconst NETWORK_ADDR = process.env.REACT_APP_NETWORK_ADDR;\n\nlet web3;\n\n// Initialize local static variables\n// Keep all the contracts definitions\nlet contracts = {};\n// Keep all the contract instances\nlet instances = {};\n// The user address\nlet address;\n\n// Initialize web3 provider (through Metamask if possible)\nconst ethereum = window.ethereum;\nethereum.enable().then(enArr => {\n  if (typeof ethereum !== \"undefined\") {\n    web3 = new Web3(ethereum);\n    address = enArr[0];\n\n    // Subscribe to an event to update the user address when changing wallets\n    web3.currentProvider.publicConfigStore.on(\n      \"update\",\n      ({ selectedAddress }) => {\n        address = selectedAddress;\n      }\n    );\n  } else {\n    console.log(\"No web3? You should consider trying MetaMask!\");\n    web3 = new Web3(new Web3.providers.HttpProvider(NETWORK_ADDR));\n    address = web3.eth.defaultAccount;\n  }\n\n  // Load Hotel Factory contract and instanciate it\n  contracts.Factory = TruffleContract(HotelFactory);\n  contracts.Factory.setProvider(ethereum);\n  contracts.Factory.deployed().then(factoryInstance => {\n    instances.Factory = factoryInstance;\n  });\n\n  // Load Hotel contract (to be instantiated by hotel id)\n  contracts.Hotel = TruffleContract(Hotel);\n  contracts.Hotel.setProvider(ethereum);\n});\n\n// Resolves when contracts are ready and loaded\nexport function isReady() {\n  const check = res => {\n    if (instances.Factory && contracts.Hotel) {\n      res();\n    } else {\n      setTimeout(() => check(res), 200);\n    }\n  };\n  return new Promise((res, rej) => {\n    check(res);\n  });\n}\n\n// Class with functions to interact with our contracts\nclass ContractsManager {\n  // Creates a new hotel\n  async createHotel(name, stars, description) {\n    const nameHex = web3.utils.asciiToHex(name);\n    const txReceipt = await this.execute(\n      instances.Factory.createContract,\n      nameHex,\n      stars,\n      description\n    );\n\n    return txReceipt.logs[0].args.contractAddress;\n  }\n\n  // Add a room to a hotel\n  async addRoom(price, cancellable, address) {\n    const weiPrice = web3.utils.toWei(price);\n    const weiCancellable = web3.utils.toWei(cancellable);\n    const hotelContract = await contracts.Hotel.at(address);\n    const txReceipt = await this.execute(\n      hotelContract.addRoom,\n      weiPrice,\n      weiCancellable\n    );\n    return txReceipt.logs[0].args.roomId.toString(10);\n  }\n\n  // Get a hotel details from it's address\n  async getHotel(address) {\n    const hotelContract = await contracts.Hotel.at(address);\n    const tx = await hotelContract.getHotel.call();\n    return {\n      id: address,\n      name: web3.utils.hexToUtf8(tx.hotelName),\n      stars: Number(tx.hotelStars),\n      description: tx.hotelDescription\n    };\n  }\n\n  // List all the hotels\n  listHotels() {\n    return instances.Factory.listAllHotels.call({ from: address });\n  }\n\n  // List all the hotels belonging to the caller\n  listMyHotels() {\n    return instances.Factory.listMyHotels.call({ from: address });\n  }\n\n  // Get all the rooms from a hotel\n  async getRooms(address) {\n    const hotelContract = await contracts.Hotel.at(address);\n    const lastRoom = await hotelContract.currentRoomId();\n\n    const roomsPromise = [];\n    for (let i = 1; i <= lastRoom; i++) {\n      roomsPromise.push(hotelContract.getRoom.call(i));\n    }\n\n    const rooms = await Promise.all(roomsPromise);\n\n    return rooms.map((txResult, index) => ({\n      id: index + 1,\n      price: this.fromWei(txResult.price),\n      priceCancellable: this.fromWei(txResult.priceCancellable)\n    }));\n  }\n\n  // Book a room\n  async book(\n    roomId,\n    hotelAddress,\n    isCancellableBooking,\n    days,\n    price,\n    dateStart,\n    dateEnd\n  ) {\n    const hotelContract = await contracts.Hotel.at(hotelAddress);\n\n    const fullPrice = web3.utils.toBN(web3.utils.toWei(price)).mul(web3.utils.toBN(days));\n    try {\n      return this.executeWithMoney(\n        hotelContract.book,\n        fullPrice.toString(),\n        roomId,\n        dateStart,\n        dateEnd,\n        isCancellableBooking\n      );\n    } catch (e) {\n      console.error(e);\n      throw e;\n    }\n  }\n\n  // Check a room availability between two dates\n  async checkAvailability(hotelAddress, roomId, start, end) {\n    const hotelContract = await contracts.Hotel.at(hotelAddress);\n    return await hotelContract.isAvailableForDates.call(roomId, start, end);\n  }\n\n  // Get all the available rooms between two dates\n  async availableRooms(hotelAddress, start, end) {\n    const hotelContract = await contracts.Hotel.at(hotelAddress);\n    const roomArray = await hotelContract.availableRoomsForDates.call(\n      start,\n      end\n    );\n    return roomArray\n      .map((available, i) => {\n        if (available) return i + 1;\n      })\n      .filter(v => v !== undefined);\n  }\n\n  // Cancels a booking\n  async cancel(hotelAddress, bookingId) {\n    const hotelContract = await contracts.Hotel.at(hotelAddress);\n    try {\n      return await hotelContract.cancel(bookingId, { from: address });\n    } catch (e) {\n      console.error(e);\n      throw e;\n    }\n  }\n\n  // Get all bookings from one hotel for a user\n  async myBookings(hotelAddress) {\n    const hotelContract = await contracts.Hotel.at(hotelAddress);\n    return hotelContract.listUserBookings({ from: address });\n  }\n\n  // Get all the bookings from many hotels for a user\n  async getMyBookingsFromHotels(hotelIds) {\n    const bookingsArray = await Promise.all(\n      hotelIds.map(async id => {\n        const bookings = await this.myBookings(id);\n        const bookingObjects = [];\n        for (let i = 0; i < bookings.id.length; i++) {\n          bookingObjects.push({\n            id: bookings.id[i],\n            hotel: id,\n            roomId: bookings.roomId[i].toString(),\n            amountPaid: this.fromWei(bookings.amountPaid[i]),\n            status: bookings.status[i].toString(),\n            startDate: bookings.startDate[i].toString(),\n            endDate: bookings.endDate[i].toString()\n          });\n        }\n        return bookingObjects;\n      })\n    );\n\n    return bookingsArray.reduce((acc, arr) => acc.concat(arr), []);\n  }\n\n  // Get the total a user can withdraw from all it's hotels\n  async getWithdrawalTotal(hotelIds) {\n    const withdrawalPromises = hotelIds.map(id => this.withdrawal(id));\n    const total = (await Promise.all(withdrawalPromises)).reduce((acc, BN) => {\n      return acc + Number(this.fromWei(BN));\n    }, 0);\n\n    return total;\n  }\n\n  // Get how much a user can withdraw (dry run) or execute the actual withdrawal\n  async withdrawal(hotelAddress, dryRun = true) {\n    const hotelContract = await contracts.Hotel.at(hotelAddress);\n\n    if (dryRun) {\n      return hotelContract.withdraw.call(/*For testing: Math.floor(Date.now() / 1000),*/ {\n        from: address\n      });\n    } else {\n      return hotelContract.withdraw(/*For testing: Math.floor(Date.now() / 1000),*/ {\n        from: address\n      });\n    }\n  }\n\n  // Convert wei to ETH\n  fromWei(wei) {\n    return web3.utils.fromWei(wei.toString());\n  }\n\n  // execute a smart contract function with the from parameter\n  execute(func, ...param) {\n    return func(...param, { from: address });\n  }\n\n  // execute a smart contract function with the from parameter and a value to pay\n  executeWithMoney(func, price, ...param) {\n    const req = {\n      from: address,\n      value: price\n    };\n\n    return func(...param, req);\n  }\n}\n\nconst contractsManager = new ContractsManager();\n\nexport default contractsManager;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = theme => ({\n  spacer: {\n    flexGrow: 1\n  }\n});\n\nconst Header = ({ classes }) => (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <Typography variant=\"h6\" color=\"inherit\">\n        <Link to=\"/\">Booking Blockchain</Link>\n      </Typography>\n      <div className={classes.spacer} />\n      <Button color=\"inherit\">\n        <Link to=\"/mybookings\">🛏 My bookings</Link>\n      </Button>\n      <Button color=\"inherit\">\n        <Link to=\"/myhotels\">🏨 My hotels</Link>\n      </Button>\n      <Button color=\"inherit\">\n        <Link to=\"/create\">🖌 Create Hotel</Link>\n      </Button>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default withStyles(styles)(Header);\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n  loader: {\n    width: '100px',\n    height: '100px',\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    marginTop: '-50px',\n    marginLeft: '-50px'\n  }\n});\n\nconst PageLoader = ({ classes }) => (\n  <CircularProgress size=\"100\" className={classes.loader} />\n);\n\nexport default withStyles(styles)(PageLoader);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Contracts, { isReady } from './lib/contracts';\nimport Header from './components/header';\nimport PageLoader from './components/pageLoader';\n\nconst styles = theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  card: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3\n  },\n  media: {\n    height: '200px'\n  }\n});\n\nclass HotelList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hotels: []\n    };\n  }\n\n  async componentDidMount() {\n    await isReady();\n\n    const hotelIds = (await Contracts.listHotels()) || [];\n\n    const hotels = await Promise.all(\n      hotelIds.map(id => {\n        return Contracts.getHotel(id);\n      })\n    );\n\n    this.setState({\n      hotels\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <Header />\n        <main className={classes.layout}>\n          {!this.state.hotels.length && <PageLoader />}\n          {this.state.hotels.map((hotel, index) => (\n            <Card className={classes.card} key={hotel.id}>\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image={`https://source.unsplash.com/featured/600x${200 +\n                    index}/?hotel`}\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {hotel.name}\n                  </Typography>\n                  <Typography component=\"p\">{hotel.description}</Typography>\n                </CardContent>\n              </CardActionArea>\n              <CardActions>\n                <Link to={`/book/${hotel.id}`}>\n                  <Button color=\"primary\">Book a room</Button>\n                </Link>\n              </CardActions>\n            </Card>\n          ))}\n        </main>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(HotelList);\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { Redirect } from \"react-router\";\n\nimport Header from \"./components/header\";\nimport Contracts from \"./lib/contracts\";\n\nconst styles = theme => ({\n  appBar: {\n    position: \"relative\"\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3\n    }\n  },\n  starsSelect: {\n    minWidth: \"120px\"\n  },\n  buttonWrapper: {\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  },\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit\n  }\n});\n\nclass HotelCreation extends Component {\n  /**\n   * Constructor.\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      hotelName: \"\",\n      hotelId: null,\n      hotelDescription: \"\",\n      hotelStars: 0,\n      error: \"\"\n    };\n  }\n\n  handleChange = key => event => {\n    this.setState({\n      [key]: event.target.value\n    });\n  };\n\n  async saveHotel() {\n    const { hotelName, hotelDescription, hotelStars } = this.state;\n    if (!hotelName || !hotelDescription || !hotelStars) {\n      this.setState({ error: \"Missing required field.\" });\n      return;\n    }\n    const address = await Contracts.createHotel(\n      hotelName,\n      hotelStars,\n      hotelDescription\n    );\n    this.setState({ hotelId: address });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { hotelId } = this.state;\n\n    const error = (\n      <Typography color=\"error\" align=\"center\">\n        {this.state.error}\n      </Typography>\n    );\n    return (\n      <>\n        {hotelId ? <Redirect to={`manage/${hotelId}`} /> : \"\"}\n        <Header />\n        <main className={classes.layout}>\n          <Paper className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n              Create Hotel\n            </Typography>\n            {error}\n            <TextField\n              label=\"Hotel Name\"\n              value={this.state.hotelName}\n              onChange={this.handleChange(\"hotelName\")}\n              fullWidth\n              autoComplete=\"fname\"\n              required\n            />\n            <TextField\n              label=\"Hotel Description\"\n              multiline\n              rows=\"5\"\n              value={this.state.hotelDescription}\n              onChange={this.handleChange(\"hotelDescription\")}\n              margin=\"normal\"\n              variant=\"outlined\"\n              fullWidth\n              required\n            />\n\n            <FormControl>\n              <InputLabel htmlFor=\"stars\">Stars</InputLabel>\n              <Select\n                required\n                className={classes.starsSelect}\n                value={this.state.hotelStars}\n                onChange={this.handleChange(\"hotelStars\")}\n              >\n                <MenuItem value={0}>0</MenuItem>\n                <MenuItem value={1}>1</MenuItem>\n                <MenuItem value={2}>2</MenuItem>\n                <MenuItem value={3}>3</MenuItem>\n                <MenuItem value={4}>4</MenuItem>\n                <MenuItem value={5}>5</MenuItem>\n              </Select>\n            </FormControl>\n            <div className={classes.buttonWrapper}>\n              <Button\n                onClick={() => this.saveHotel()}\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"button\"\n              >\n                Create\n              </Button>\n            </div>\n          </Paper>\n        </main>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(HotelCreation);\n","import React from 'react';\nimport StarRate from '@material-ui/icons/StarRate';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  stars: {\n    position: 'absolute',\n    top: theme.spacing.unit * 4,\n    right: theme.spacing.unit * 2,\n    color: 'rgb(242,221,78)'\n  }\n});\n\nconst star = ({ rating = 0, classes }) => (\n  <div className={classes.stars}>\n    {Array(rating)\n      .fill(0)\n      .map((_, i) => (\n        <StarRate key={i} />\n      ))}\n  </div>\n);\n\nexport default withStyles(styles)(star);\n","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Button from \"@material-ui/core/Button\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\n\nimport Header from \"./components/header\";\nimport Stars from \"./components/stars\";\nimport Contracts, { isReady } from \"./lib/contracts\";\n\nconst styles = theme => ({\n  appBar: {\n    position: \"relative\"\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    position: \"relative\",\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3\n    }\n  },\n  addRoomFab: {\n    position: \"absolute\",\n    right: theme.spacing.unit * 2,\n    top: theme.spacing.unit * 2\n  },\n  errorSnack: {\n    position: \"static\",\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3\n  },\n  errorSnackContent: {\n    backgroundColor: theme.palette.error.dark\n  }\n});\n\nclass ManageHotel extends Component {\n  /**\n   * Constructor.\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      addingRoom: false,\n      price: \"\",\n      priceCancellable: \"\",\n      userHotels: [],\n      hotelSummary: {\n        id: null,\n        name: \"\",\n        description: \"\",\n        stars: 0\n      },\n      rooms: []\n    };\n\n    this.hotelAddress = this.props.match.params.address;\n\n    this.handleCloseAddRoomDialog = this.handleCloseAddRoomDialog.bind(this);\n    this.handleAddRoomDialogCreate = this.handleAddRoomDialogCreate.bind(this);\n    this.saveRoom = this.saveRoom.bind(this);\n  }\n\n  async componentDidMount() {\n    await isReady();\n    const hotelSummary = await Contracts.getHotel(this.hotelAddress);\n    this.setState({\n      hotelSummary\n    });\n\n    this.loadRooms();\n\n    Contracts.listMyHotels().then(hotelIds => {\n      this.setState({\n        userHotels: hotelIds\n      });\n    });\n  }\n\n  async loadRooms() {\n    const rooms = await Contracts.getRooms(this.hotelAddress);\n\n    this.setState({\n      rooms\n    });\n  }\n\n  handleCloseAddRoomDialog() {\n    this.setState({ addingRoom: false });\n  }\n\n  async handleAddRoomDialogCreate() {\n    const { price, priceCancellable, hotelSummary } = this.state;\n    this.handleCloseAddRoomDialog();\n    await this.saveRoom(hotelSummary.id, price, priceCancellable);\n    this.setState({\n      price: \"\",\n      priceCancellable: \"\"\n    });\n  }\n\n  async saveRoom(hotelId, price, priceCancellable) {\n    await Contracts.addRoom(price, priceCancellable, hotelId);\n    this.loadRooms();\n  }\n\n  handleChange = key => event => {\n    this.setState({\n      [key]: event.target.value\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { name, description, stars } = this.state.hotelSummary;\n    const { rooms } = this.state;\n\n    return (\n      <>\n        <Header />\n        <main className={classes.layout}>\n          <Snackbar\n            className={classes.errorSnack}\n            open={!this.state.userHotels.includes(this.hotelAddress)}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          >\n            <SnackbarContent\n              className={classes.errorSnackContent}\n              message={\n                <span>\n                  <WarningIcon style={{ verticalAlign: \"bottom\" }} /> You're not\n                  the owner of this hotel and can't modify it.\n                </span>\n              }\n            />\n          </Snackbar>\n\n          <Paper className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h4\">\n              {name}\n            </Typography>\n            <Typography\n              variant=\"subtitle1\"\n              gutterBottom\n              paragraph\n              className={classes.description}\n            >\n              {description}\n            </Typography>\n            <Stars rating={stars} />\n          </Paper>\n          <Paper className={classes.paper}>\n            <Typography component=\"h2\" variant=\"h4\">\n              Rooms\n            </Typography>\n            {this.state.userHotels.includes(this.hotelAddress) ? (\n              <Fab\n                color=\"secondary\"\n                aria-label=\"Add\"\n                className={classes.addRoomFab}\n                onClick={() => this.setState({ addingRoom: true })}\n              >\n                <AddIcon />\n              </Fab>\n            ) : (\n              \"\"\n            )}\n\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Room</TableCell>\n                  <TableCell align=\"right\">Pre-paid price</TableCell>\n                  <TableCell align=\"right\">Cancellable price</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rooms.map(room => (\n                  <TableRow key={room.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {room.id}\n                    </TableCell>\n                    <TableCell align=\"right\">{room.price}</TableCell>\n                    <TableCell align=\"right\">{room.priceCancellable}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Paper>\n        </main>\n\n        <Dialog\n          open={this.state.addingRoom}\n          onClose={this.handleCloseAddRoomDialog}\n          aria-labelledby=\"add-room-dialog-title\"\n        >\n          <DialogTitle id=\"add-room-dialog-title\">Add Room</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Please enter the room price and the price for cancellable\n              bookings. Leave empty if the booking is not cancellable.\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"Pre-paid booking price\"\n              type=\"number\"\n              fullWidth\n              value={this.state.price}\n              onChange={e => this.setState({ price: e.target.value })}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">ETH</InputAdornment>\n                )\n              }}\n            />\n            <TextField\n              margin=\"dense\"\n              label=\"Cancellable booking price\"\n              type=\"number\"\n              fullWidth\n              value={this.state.priceCancellable}\n              onChange={e =>\n                this.setState({ priceCancellable: e.target.value })\n              }\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">ETH</InputAdornment>\n                )\n              }}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleCloseAddRoomDialog} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleAddRoomDialogCreate} color=\"primary\">\n              Create\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(ManageHotel);\n","import React, { Component } from \"react\";\nimport MomentUtils from \"@date-io/moment\";\nimport moment from \"moment\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"material-ui-pickers\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport Header from \"./components/header\";\nimport Stars from \"./components/stars\";\nimport Contracts, { isReady } from \"./lib/contracts\";\n\nconst styles = theme => ({\n  appBar: {\n    position: \"relative\"\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(800 + theme.spacing.unit * 2 * 2)]: {\n      width: 800,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    position: \"relative\",\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(800 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3\n    }\n  },\n  addRoomFab: {\n    position: \"absolute\",\n    right: theme.spacing.unit * 2,\n    top: theme.spacing.unit * 2\n  },\n  errorSnack: {\n    position: \"static\",\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3\n  },\n  errorSnackContent: {\n    backgroundColor: theme.palette.error.dark\n  }\n});\n\nclass HotelSummary extends Component {\n  /**\n   * Constructor.\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      addingRoom: false,\n      price: \"\",\n      priceCancellable: \"\",\n      userHotels: [],\n      startDate: moment()\n        .utc()\n        .startOf(\"day\"),\n      endDate: moment()\n        .utc()\n        .startOf(\"day\"),\n      hotelSummary: {\n        id: null,\n        name: \"\",\n        description: \"\",\n        stars: 0\n      },\n      rooms: []\n    };\n\n    this.hotelAddress = this.props.match.params.address;\n\n    //this.checkAvailability = this.checkAvailability.bind(this);\n    this.getAvailableRooms = this.getAvailableRooms.bind(this);\n  }\n\n  async componentDidMount() {\n    await isReady();\n    const hotelSummary = await Contracts.getHotel(this.hotelAddress);\n    this.setState({\n      hotelSummary\n    });\n  }\n\n  handleCloseAddRoomDialog() {\n    this.setState({ addingRoom: false });\n  }\n\n  handleChange = key => event => {\n    this.setState({\n      [key]: event.target.value\n    });\n  };\n\n  handleDateChange = key => date => {\n    this.setState({ [key]: date.utc().startOf(\"day\") });\n    //this.getAvailableRooms();\n  };\n\n  async getAvailableRooms() {\n    const { startDate, endDate } = this.state;\n    const availableIds = await Contracts.availableRooms(\n      this.hotelAddress,\n      startDate.unix(),\n      endDate.unix()\n    );\n    const rooms = await Contracts.getRooms(this.hotelAddress);\n\n    const availableRooms = rooms.filter(({ id }) => availableIds.includes(id));\n\n    this.setState({\n      rooms: availableRooms\n    });\n  }\n\n  bookRoom(roomId, price, isCancellableBooking = false) {\n    return async () => {\n      const { startDate, endDate } = this.state;\n      const diff = endDate.diff(startDate, \"days\") || 1;\n      console.log(`${diff} nights`);\n\n      const res = await Contracts.book(\n        roomId,\n        this.hotelAddress,\n        isCancellableBooking,\n        diff,\n        price,\n        startDate.unix(),\n        endDate.unix()\n      );\n      console.log(res);\n      this.getAvailableRooms();\n      return res;\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { startDate, endDate, rooms } = this.state;\n    const { name, description, stars } = this.state.hotelSummary;\n    return (\n      <>\n        <Header />\n        <main className={classes.layout}>\n          <Paper className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h4\">\n              {name}\n            </Typography>\n            <Typography\n              variant=\"subtitle1\"\n              gutterBottom\n              paragraph\n              className={classes.description}\n            >\n              {description}\n            </Typography>\n            <Stars rating={stars} />\n          </Paper>\n          <Paper\n            className={classes.paper}\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n              <DatePicker\n                label=\"Checkin\"\n                value={startDate}\n                onChange={this.handleDateChange(\"startDate\")}\n                animateYearScrolling={false}\n                minDate={new Date()}\n              />\n              <DatePicker\n                label=\"Checkout\"\n                value={endDate}\n                onChange={this.handleDateChange(\"endDate\")}\n                animateYearScrolling={false}\n                minDate={startDate}\n              />\n            </MuiPickersUtilsProvider>\n            <Button variant=\"outlined\" onClick={this.getAvailableRooms}>\n              Check availability\n            </Button>\n          </Paper>\n          <Paper className={classes.paper}>\n            <Typography component=\"h2\" variant=\"h4\">\n              Rooms\n            </Typography>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Room</TableCell>\n                  <TableCell align=\"right\">Pre-paid price</TableCell>\n                  <TableCell align=\"right\">Cancellable price</TableCell>\n                  <TableCell>Book</TableCell>\n                  <TableCell>Book Cancellable</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rooms.map(room => (\n                  <TableRow key={room.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {room.id}\n                    </TableCell>\n                    <TableCell align=\"right\">{room.price}</TableCell>\n                    <TableCell align=\"right\">{room.priceCancellable}</TableCell>\n                    <TableCell>\n                      <Button\n                        variant=\"outlined\"\n                        onClick={this.bookRoom(room.id, room.price)}\n                      >\n                        Book\n                      </Button>\n                    </TableCell>\n                    <TableCell>\n                      <Button\n                        variant=\"outlined\"\n                        onClick={this.bookRoom(\n                          room.id,\n                          room.priceCancellable,\n                          true\n                        )}\n                      >\n                        Book Cancellable\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Paper>\n        </main>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(HotelSummary);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Contracts, { isReady } from \"./lib/contracts\";\nimport Header from \"./components/header\";\nimport PageLoader from \"./components/pageLoader\";\n\nconst styles = theme => ({\n  appBar: {\n    position: \"relative\"\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  card: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3\n  },\n  media: {\n    height: \"200px\"\n  }\n});\n\nclass MyHotels extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hotels: [],\n      withdrawalAmount: 0,\n      withdrawalByHotel: {}\n    };\n\n    this.getWithdrawalTotal = this.getWithdrawalTotal.bind(this);\n  }\n\n  async componentDidMount() {\n    await isReady();\n    const userHotelsIds = (await Contracts.listMyHotels()) || [];\n\n    this.getWithdrawalTotal(userHotelsIds);\n    this.withdrawByHotel(userHotelsIds);\n\n    const hotels = await Promise.all(\n      userHotelsIds.map(id => {\n        return Contracts.getHotel(id);\n      })\n    );\n\n    this.setState({\n      hotels\n    });\n  }\n\n  async getWithdrawalTotal(hotelIds) {\n    const withdrawalAmount = await Contracts.getWithdrawalTotal(hotelIds);\n    console.log(withdrawalAmount);\n    this.setState({\n      withdrawalAmount\n    });\n  }\n\n  withdraw(hotelId) {\n    return async () => {\n      await Contracts.withdrawal(hotelId, false);\n    };\n  }\n\n  async withdrawByHotel(hotelId) {\n    const withdrawalArray =\n      (await Promise.all(\n        hotelId.map(async id => {\n          return [id, await Contracts.withdrawal(id)];\n        })\n      )) || [];\n\n    const withdrawalByHotel = withdrawalArray.reduce((acc, [id, amount]) => {\n      acc[id] = Contracts.fromWei(amount) + \"ETH\";\n      return acc;\n    }, {});\n    console.log(withdrawalByHotel);\n    this.setState({\n      withdrawalByHotel\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { withdrawalAmount } = this.state;\n    return (\n      <>\n        <Header />\n        <main className={classes.layout}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Total you can withdraw: {withdrawalAmount} ETH\n              </Typography>\n            </CardContent>\n          </Card>\n          {!this.state.hotels.length && <PageLoader />}\n          {this.state.hotels.map(hotel => (\n            <Card className={classes.card} key={hotel.id}>\n              <CardActionArea>\n                <Link to={`/manage/${hotel.id}`}>\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {hotel.name}\n                    </Typography>\n                  </CardContent>\n                </Link>\n              </CardActionArea>\n              {this.state.withdrawalByHotel[hotel.id] && (\n                <Button onClick={this.withdraw(hotel.id)}>\n                  withdraw {this.state.withdrawalByHotel[hotel.id]}\n                </Button>\n              )}\n            </Card>\n          ))}\n        </main>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(MyHotels);\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\nimport moment from \"moment\";\nimport Contracts, { isReady } from \"./lib/contracts\";\nimport Header from \"./components/header\";\n\nconst styles = theme => ({\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(800 + theme.spacing.unit * 2 * 2)]: {\n      width: 800,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    position: \"relative\",\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3\n    }\n  },\n  addressRow: {\n    width: \"150px\",\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  }\n});\n\nconst cancelBooking = (hotelId, bookingId, callback) => {\n  return () => {\n    const cancel = Contracts.cancel(hotelId, bookingId);\n    callback(cancel);\n    return cancel;\n  };\n};\n\nclass MyHotels extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hotelIds: [],\n      bookings: []\n    };\n\n    this.getBookings = this.getBookings.bind(this);\n  }\n\n  async componentDidMount() {\n    await isReady();\n    const hotelIds = (await Contracts.listHotels()) || [];\n\n    this.setState({\n      hotelIds\n    });\n\n    this.getBookings();\n  }\n\n  async getBookings() {\n    const hotelIds = this.state.hotelIds;\n    const bookings = await Contracts.getMyBookingsFromHotels(hotelIds);\n    console.log(bookings);\n    this.setState({\n      bookings\n    });\n  }\n  /*\naddress customer;\nuint roomId;\nuint startDate;\nuint endDate;\nuint dateTimeStart;\nuint amountPaid;\nBookingStatus status;\n*/\n  render() {\n    const { classes } = this.props;\n    const { bookings } = this.state;\n\n    return (\n      <>\n        <Header />\n        <main className={classes.layout}>\n          <Paper className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h4\">\n              My bookings\n            </Typography>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Hotel</TableCell>\n                  <TableCell align=\"right\">Checkin</TableCell>\n                  <TableCell align=\"right\">Checkout</TableCell>\n                  <TableCell align=\"right\">Price</TableCell>\n                  <TableCell align=\"right\">Cancel</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {bookings.map(booking => (\n                  <TableRow key={booking.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      <div className={classes.addressRow}>{booking.hotel}</div>\n                    </TableCell>\n                    <TableCell>\n                      {moment.unix(booking.startDate).format(\"D/M/YYYY\")}\n                    </TableCell>\n                    <TableCell>\n                      {moment.unix(booking.endDate).format(\"D/M/YYYY\")}\n                    </TableCell>\n                    <TableCell align=\"right\">{booking.amountPaid}</TableCell>\n                    <TableCell align=\"right\">\n                      <BookingAction\n                        booking={booking}\n                        onUpdate={this.getBookings}\n                      />\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Paper>\n        </main>\n      </>\n    );\n  }\n}\n\nconst BookingAction = ({ booking, onUpdate }) => {\n  switch (booking.status) {\n    case \"0\":\n      return \"Cancelled\";\n    case \"1\":\n    case \"3\":\n      return \"Confirmed\";\n    case \"2\": {\n      if (booking.startDate <= moment().unix()) {\n        return \"Confirmed\";\n      }\n\n      return (\n        <Button\n          variant=\"outlined\"\n          onClick={cancelBooking(booking.hotel, booking.id, onUpdate)}\n        >\n          Cancel\n        </Button>\n      );\n    }\n    default:\n      return \"Oups\";\n  }\n};\n\nexport default withStyles(styles)(MyHotels);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport HotelList from \"./HotelList\";\nimport HotelCreation from \"./HotelCreation\";\nimport ManageHotel from \"./ManageHotel\";\nimport RoomBooking from \"./RoomBooking\";\nimport MyHotels from \"./MyHotels\";\nimport Bookings from \"./Bookings\";\n\nexport default function() {\n  return (\n    <>\n      <CssBaseline />\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/book/:address\" component={RoomBooking} />\n          <Route exact path=\"/myhotels\" component={MyHotels} />\n          <Route exact path=\"/mybookings\" component={Bookings} />\n          <Route exact path=\"/create\" component={HotelCreation} />\n          <Route path=\"/manage/:address\" component={ManageHotel} />\n          <Route exact path=\"/\" component={HotelList} />\n        </Switch>\n      </HashRouter>\n    </>\n  );\n}\n"],"sourceRoot":""}